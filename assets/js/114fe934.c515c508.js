"use strict";(self.webpackChunksite_generator_docusaurus=self.webpackChunksite_generator_docusaurus||[]).push([[340],{13358:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"key-concepts/persona","title":"Persona","description":"A Persona represents how a user can interact with a given asset in the Vouch ecosystem. Essentially, a Persona is a meaningful label that represents a set of entitlements, defining the user\'s permissions and level of control over a particular asset.","source":"@site/versioned_docs/version-0.99.0/key-concepts/persona.md","sourceDirName":"key-concepts","slug":"/key-concepts/persona","permalink":"/0.99.0/key-concepts/persona","draft":false,"unlisted":false,"tags":[],"version":"0.99.0","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"offlineSidebar","previous":{"title":"Asset Device","permalink":"/0.99.0/key-concepts/asset-device"},"next":{"title":"Asset Access","permalink":"/0.99.0/key-concepts/asset-access"}}');var a=n(74848),r=n(28453);const o={sidebar_position:3},i="Persona",c={},p=[];function h(e){const s={h1:"h1",header:"header",mermaid:"mermaid",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"persona",children:"Persona"})}),"\n",(0,a.jsx)(s.mermaid,{value:"classDiagram\n`asset`\n`user`\n`persona`\n`persona`: id string\n`persona`: issuing-persona ref\n`persona`: type keyword\n`persona`: status keyword\n`persona`: asset ref\n`persona`: user ref\n`persona`: entitlements ref\n`persona` --\x3e `asset`\n`persona` --\x3e `user`\ndirection RL"}),"\n",(0,a.jsx)(s.p,{children:"A Persona represents how a user can interact with a given asset in the Vouch ecosystem. Essentially, a Persona is a meaningful label that represents a set of entitlements, defining the user's permissions and level of control over a particular asset."}),"\n",(0,a.jsx)(s.p,{children:"For example, an Persona of type\xa0owner\xa0 is entitled to transfer ownership of the asset and may have full access to the asset. On the other hand, a\xa0Persona of type\xa0friend  might be granted access rights but not the authority to transfer or make major changes to the asset."}),"\n",(0,a.jsx)(s.p,{children:"Each Persona is uniquely identified by an id and linked to both a user and an asset, which defines the interaction scope. The issuing-persona property establishes which Persona granted the entitlements, ensuring a chain of authority. The Persona also has  a status, which indicates whether the Persona is active or inactive."})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var t=n(96540);const a={},r=t.createContext(a);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);